# Nom du workflow visible sur GitHub
name: .NET Actions

# Quand déclencher ce workflow
on:
  push: # À chaque push
    branches:
      - master        # Sur la branche master
  pull_request: # À chaque pull request
    branches:
      - master        # Vers master
      - features      # Vers features

# Définition des tâches à exécuter
jobs:
  build:
    runs-on: ubuntu-latest   # Utilise la dernière version d'une VM Ubuntu hébergée par GitHub

    # Liste des actions à effectuer
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4  # Clone le code source du dépôt
      with:
        fetch-depth: 0  # Permet à GitVersion d’avoir l'historique complet
      
    - name: Fetch full history to help GitVersion
      run: git fetch --prune --unshallow --tags      

    #- name: Cloner le projet de tests externes
      #run: git clone https://github.com/dioprawane/GestionBudgetTest.git TestsExternes
    - name: Cloner le projet de tests externes
      run: git clone https://github.com/dioprawane/GestionBudgetTest.git ../GestionBudgetTest

    - name: Installation .NET du sdk
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.302'  # Installe la version spécifique .NET 8.0.302 du SDK 

    # Ces étapes sont utilisées pour se connecter à MySQL
    # - name: Set environment variables
    #   run: echo "PASSWORDMYSQL=${{ secrets.PASSWORDMYSQL }}" >> $GITHUB_ENV

    # - name: Install MySQL Client
    #   run: sudo apt-get install -y mysql-client

    # - name: Test MySQL Connection
    #   env:
    #     PASSWORDMYSQL: ${{ secrets.PASSWORDMYSQL }}
    #   run: |
    #     mysql --host=pro69valo.urdom.ad.recouv --user=perfeco --password=$PASSWORDMYSQL dialogue_gestion -e "SHOW DATABASES;"

    - name: Intallation/Restauration des dépendances
      #run: dotnet restore    # Restaure/installe les dépendances NuGet
      run: |
        dotnet restore GestionBudgétaire.csproj
        dotnet restore ../GestionBudgetTest/GestionBudgetaireTest.csproj

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.12.0
      with:
        versionSpec: '6.3.0'

    - name: Run GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.12.0

    - name: Show GitVersion output
      run: |
        echo "GitVersion (fullSemVer): ${{ steps.gitversion.outputs.fullSemVer }}"
        echo "GitVersion (nugetVersionV2): ${{ steps.gitversion.outputs.nugetVersionV2 }}"
        echo "GitVersion (branch): ${{ steps.gitversion.outputs.branchName }}"

    - name: Inject version into AssemblyInfo.cs
      run: |
        dotnet new tool-manifest --force
        dotnet tool install GitVersion.Tool --version 6.3.0
        dotnet tool run dotnet-gitversion \
          /updateassemblyinfo Properties/AssemblyInfo.cs \
          /ensureassemblyinfo \
          /config gitversion.yml              

    #- name: Inject version in AssemblyInfo.cs
      #run: |
        #dotnet-gitversion /updateassemblyinfo GestionBudgétaire/Properties/AssemblyInfo.cs /ensureassemblyinfo /config gitversion.yml      
    
    #- name: Compilation
      #run: dotnet build --configuration Release --no-restore  # Compile l’application en mode Release sans refaire restore

    - name: Compilation du projet
      #run: dotnet build --configuration Release --no-restore /p:Version=${{ steps.gitversion.outputs.fullSemVer }}
      run: dotnet build GestionBudgétaire.csproj --configuration Release --no-restore /p:Version=${{ steps.gitversion.outputs.fullSemVer }}

    - name: Build du projet de tests
      run: |
        dotnet build ../GestionBudgetTest/GestionBudgetaireTest.csproj --no-restore --verbosity quiet
    
    - name: Lancer les tests avec affichage console et rapport TRX
      run: |
        dotnet test ../GestionBudgetTest/GestionBudgetaireTest.csproj \
          --no-restore \
          --no-build \
          --verbosity minimal \
          --logger "console;verbosity=detailed" \
          --logger "trx;LogFileName=TestResults.trx" \
          --results-directory ./TestResults       
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: TestResults
        path: ./TestResults

      